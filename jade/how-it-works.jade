extends layout

block content

	h1 Splink

	.content
		
		h2 How it Works

		p Take this HTML document as an example: 
		
		pre
			code
| &lt;head&gt;
| 	&lt;!-- a bunch of stuff in the head --&gt;
| &lt;/head&gt;
| 
| &lt;body&gt;
| 	&lt;h1&gt;Blog&lt;/h1&gt;
| 
| 	&lt;article class="blog-post"&gt;
| 		&lt;h2&gt;Blog Post&lt;/h2&gt;
| 		&lt;p&gt;
| 			&lt;!-- the content of the blog post --&gt;
| 		&lt;/p&gt;
| 	&lt;/article&gt;
| 
| 	&lt;nav class="post-navigation"&gt;
| 		&lt;a class="splink-link" href="/posts/this-is-the-post-name"&gt;Previous Post&lt;/a&gt;
| 		&lt;a class="splink-link" href="/posts/another-post-name"&gt;Next Post&lt;/a&gt;
| 	&lt;/nav&gt;
| 
| 	&lt;footer&gt;
| 		&lt;p&gt;
| 			Find me on
| 			&lt;a href="http://github.com"&gt;Github&lt;/a&gt; or 
| 			&lt;a href="http://twitter.com"&gt;Twitter&lt;/a&gt;
| 		&lt;/p&gt;
| 		&lt;p&gt;
| 			&copy; 2013 - Blog Author
| 		&lt;/p&gt;
| 	&lt;/footer&gt;
| 
| &lt;/body&gt;
		
		p The rest of your blog posts are structured the same way, namely with the content in an element that matches the CSS selector <code>article.blog-post</code>, and the navigation in <code>nav.post-navigation</code>. The footer stays the same, as does the <code>&lt;h1&gt;</code> at the top. So we're targeting <code>article.blog-post</code> and <code>nav.post-navigation</code>. The links that take us from page to page are in the nav element and have the class .splink-link. So the plugin usage in this case would be:

		pre
			code
| $("a.splink-link").splink(
|   [{target: "article.blog-post", selector: "same"},
|   {target: "nav.post-navigation", selector: "same"}],
|   {
|   	prefetch: true, 
|   	animate: 250,
|   	runScripts: true
|   }
| );
	
	.navigation
		p <a class="gofer-link" href="/gofer.js/pages/big-page.html">Next: Massive Page</a>
		p <a class="gofer-link" href="/gofer.js/pages/overview.html">Previous: Overview</a>